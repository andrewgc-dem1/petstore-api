name: Provision EC2 from AMI

on:
  push:
   branches: ["main"]     # manual only; change to ["main"] when ready.
  workflow_dispatch:

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  STACK_NAME: petstore-ec2
  TEMPLATE_FILE: cloudformation/ec2.yaml

jobs:
  provision-ec2-cfn:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy CF stack (EC2 from AMI)
        run: |
          set -euo pipefail
          aws cloudformation deploy \
            --stack-name "$STACK_NAME" \
            --template-file "$TEMPLATE_FILE" \
            --parameter-overrides \
              AMIId=${{ vars.AMI_ID }} \
              InstanceType=${{ vars.INSTANCE_TYPE }} \
              SubnetId=${{ vars.SUBNET_ID }} \
              SecurityGroupIds=${{ vars.SG_IDS }} \
              IamInstanceProfileName=${{ vars.INSTANCE_PROFILE_NAME }} \
              KeyName=${{ vars.KEY_NAME }} \
              DeployTagKey=${{ vars.DEPLOY_TAG_KEY }} \
              DeployTagValue=${{ vars.DEPLOY_TAG_VALUE }} \
            --no-fail-on-empty-changeset \
            --region "${AWS_REGION}" \
            --capabilities CAPABILITY_NAMED_IAM

      - name: Get InstanceId from CF output
        id: cfnout
        run: |
          INSTANCE_ID=$(aws cloudformation describe-stacks \
            --stack-name "$STACK_NAME" \
            --query "Stacks[0].Outputs[?OutputKey=='InstanceId'].OutputValue" \
            --output text)
          echo "instance_id=$INSTANCE_ID" >> "$GITHUB_OUTPUT"

      - name: Show launched instance
        run: echo "Launched EC2 InstanceId: ${{ steps.cfnout.outputs.instance_id }}"
