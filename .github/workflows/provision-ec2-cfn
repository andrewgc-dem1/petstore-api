provision-ec2-cfn:
  runs-on: ubuntu-latest
  needs: build-and-push   # keep if you want CF to run after image push
  permissions:
    id-token: write
    contents: read

  env:
    AWS_REGION: ${{ vars.AWS_REGION }}
    STACK_NAME: petstore-ec2
    TEMPLATE_FILE: cloudformation/ec2.yaml

  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy CF stack (create/update EC2 from your AMI)
      run: |
        set -euo pipefail
        aws cloudformation deploy \
          --stack-name "$STACK_NAME" \
          --template-file "$TEMPLATE_FILE" \
          --parameter-overrides \
            AMIId=${{ vars.AMI_ID }} \
            InstanceType=${{ vars.INSTANCE_TYPE }} \
            SubnetId=${{ vars.SUBNET_ID }} \
            SecurityGroupIds='${{ vars.SG_IDS }}' \
            IamInstanceProfileName='${{ vars.INSTANCE_PROFILE_NAME }}' \
            KeyName='${{ vars.KEY_NAME }}' \
            DeployTagKey='${{ vars.DEPLOY_TAG_KEY }}' \
            DeployTagValue='${{ vars.DEPLOY_TAG_VALUE }}' \
          --no-fail-on-empty-changeset \
          --region "${AWS_REGION}"
          # Add the next line ONLY if your template creates/modifies IAM resources:
          # --capabilities CAPABILITY_NAMED_IAM

    - name: Grab InstanceId output
      id: cfnout
      run: |
        aws cloudformation describe-stacks --stack-name "$STACK_NAME" \
          --query "Stacks[0].Outputs[?OutputKey=='InstanceId'].OutputValue" \
          --output text > instance_id.txt
        echo "instance_id=$(cat instance_id.txt)" >> "$GITHUB_OUTPUT"

    - name: Show instance id
      run: echo "Launched/updated EC2 InstanceId: ${{ steps.cfnout.outputs.instance_id }}"
